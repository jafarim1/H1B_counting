Sorting Visas
Definition of the global lists: In the main python program you will see 6 global list as follow: listSocCount=0 Contains the number of unique occupation listSocName=[] Name of each occupation in the order of the input file listSocNum=[] Total number of each unique occupation listStateName =[] Name of each state in the order of the input file, listSocNum=[] Total number of each unique state
 These lists get updated in two case: 1) if there is a new state: a new state is added the main list. 2) if there is a new occupation One reason I chose this type of global list is that the program can work online without the need of scanning the whole documents and can provide the output even if there is still stream of input data coming in. This is very important and can make decision makings much easier as we are dealing with real-time data in most of the applications with big data analysis. The code is simpler and much easier if we want to just run it as an offline analyzing tool and scan the whole document first to define our array sizes and other specific parameters. I personally think this is less generic and useful. 
 Definition of the functions: The rest of the code is very simple with the above description of global lists. There are three main functions as follow: checkHistory: This function loop over the entire list of states and occupations to see if the current state/occupation request has been already registered or not. Then it will return two flags: SocExists/stateExists and SocExistIndex/stateExists which show if the SOC/state exist in the registry (“listSocName/ listStateName”) and what’s its index in the registry if so, respectively. Depending on the result of the “checkHistory” function, either addNew or update functions are called. addNew: this function append the entire list of SOS/State registry (“listSOCCount/listStateCount”) with a new SOC/State. 
update: When this function is called, it means the SOC/state exists in the registry and it only adds the numbers by 1.
 The main body of the program: Starting by reading the first line of the file which should be header, the program advances to the second line and store all information’s in the global lists as there hasn’t been any requests before this. These lines initiate all the global lists. Then the program advances to a conditional loop which reads the file line by line until it reaches the end of the file. If the input file is updated online, the loop continuous to work and sort the occupations and states. As explained before by using the three main function, it simply reads the file line by line and either update the list of the SOC/States or append to the list if they are new. After the end of the file is reach. The program shows the global lists for the unique occupations and states.

Creating the output file: With having the global list of unique Soc/satets, this section of the program simply find the maximum number of the states and occupations and sort them alphabetically in case of a draw.
